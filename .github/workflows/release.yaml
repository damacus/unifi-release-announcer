name: CI/CD

on:
  push:
    branches: [main]

jobs:
  release-please:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      actions: write
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      version: ${{ steps.release.outputs.version }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Generate GitHub App Token
        id: generate_token
        uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b # v2.1.1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Run Release Please
        id: release
        uses: googleapis/release-please-action@c2a5a2bd6a758a0937f1ddb1e8950609867ed15c # v4
        with:
          token: ${{ steps.generate_token.outputs.token }}

  release-docker:
    if: needs.release-please.outputs.release_created == 'true'
    needs: release-please
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Log in to Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag and push release image
        env:
          RELEASE_IMAGE: ghcr.io/${{ github.repository }}
          VERSION_TAG: ${{ needs.release-please.outputs.tag_name }}
        run: |
          docker pull "${RELEASE_IMAGE}:latest"
          docker tag "${RELEASE_IMAGE}:latest" "${RELEASE_IMAGE}:${VERSION_TAG}"
          docker push "${RELEASE_IMAGE}:${VERSION_TAG}"
